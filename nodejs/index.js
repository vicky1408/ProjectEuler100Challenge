let arguments = process.argv.slice(2);

function challenge1(limit) {

    console.log(
        "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. \n" +
        "Find the sum of all the multiples of 3 or 5 below " + limit + "\n"
    );

    console.log("solution:");
    console.log("--------");


    const start = 1;
    let result = 0;
    const multiples = [3, 5];

    for (let i = start; i < limit; i++) {
        multiples.some(
            value => {
                if (i % value === 0) {
                    //uncomment for details
                    //console.log("multiple of " + value + " is " + i);
                    result += i;
                    return true;
                }
            }
        )
    }

    console.log("Sum of natural numbers below " + limit + " which are multiples of " + multiples + " is " + result + "\n");
}


function challenge2(maxValue) {
    console.log(
        "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: \n" +
        "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... \n" +
        "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n"
    );

    console.log("solution:");
    console.log("--------");

    let secondLastNo = 1;
    let lastNo = 1;

    let arrFibonacci = [lastNo];
    let sumOfEvenFib = 0;
    let boolExecuteLoop = true;

    while (boolExecuteLoop) {
        let tempValue = lastNo;
        lastNo += secondLastNo;
        secondLastNo = tempValue;

        if (lastNo <= maxValue) {
            arrFibonacci.push(lastNo);

            //uncomment for Fibonacci generation sequence
            //console.log(arrFibonacci);

            if (lastNo % 2 === 0) {
                sumOfEvenFib += lastNo;
            }
        } else {
            boolExecuteLoop = false;
        }
    }

    console.log("Fibonacci: \n" + arrFibonacci);
    console.log("\n sum of fibonacci even related is " + sumOfEvenFib + " whose Fibonacci sequence values does not exceed " + maxValue + " (Actual Fibonacci last value : " + arrFibonacci[arrFibonacci.length - 1] + ") ");
}


function challenge3(intNumber) {
    console.log(
        "The prime factors of 13195 are 5, 7, 13 and 29. \n" +
        "What is the largest prime factor of the number "+ intNumber +" ? \n"
    );

    console.log("solution:");
    console.log("--------");

    let i = 2;
    let arrayPrimeFactor = [];
    let intlargestPrimeFactor = 1;
    let inputValue = intNumber;

    while (i <= intNumber)
    {
        if (intNumber % i === 0)
        {
            arrayPrimeFactor.push(i);
            if (intlargestPrimeFactor < i)
            {
                intlargestPrimeFactor = i;
            }

            // Uncomment for details
            // console.log("intNumber " + intNumber);
            // console.log("i " + i);
            // console.log("intNumber/i " + intNumber / i);

            intNumber = intNumber / i;
            i = 1;
        }
        i++;
    }

    console.log("Prime Factors of "+ inputValue +" : " + arrayPrimeFactor);
    console.log("Largest Prime Factor " + intlargestPrimeFactor);
}

switch (arguments[0]) {

    case '1':
        challenge1(arguments[1]);
        break;

    case "2":
        challenge2(arguments[1]);
        break;

    case "3":
        challenge3(arguments[1]);
        break;

    default:
        console.log("Please provide valid input");
        break;
}